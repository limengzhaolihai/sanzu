server:
    port: 8080
spring:
#  profiles:
#    active: dev
    web:
        resources:
            static-locations: classpath:/
    datasource:
        username: root
        password: 'root'
#        password: root
#        password: Oracle@123
        url: jdbc:mysql://localhost:3306/jsexp?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
#        url: jdbc:mysql://192.168.6.147:3306/jsexp?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&allowMultiQueries=true
#        url: jdbc:mysql://43.140.192.62:3306/jsexp?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&allowMultiQueries=true
        driver-class-name: com.mysql.cj.jdbc.Driver
        hikari:
            max-lifetime: 70000
mybatis:
    type-aliases-package: com.example.demo.Pojo
    mapper-locations: classpath:mybatis/*.xml
# 日志配置
logging:
    level:
        # web日志
        org.springframework.web: debug
        # security 日志
        org.springframework.security: error
        # mybatis日志
        org.mybatis: debug
    charset:
        # 输出控制台编码
        console: UTF-8
        # 输出文件编码
        file: UTF-8
    # 输出文件名及路径，不配置则不输出文件
    file:
        # 切记，该文件表示正在产出日志的日志文件。并不会打包，当文件大于max-file-size,会根据file-name-pattern格式打包
        # 名称为log/ota.log文件夹会在项目根目录下，打包后会在启动包同目录下；名称为/log/ota.log的文件夹会在项目所在磁盘的跟目录下
        name: log/ota.log
    logback:
        rollingpolicy:
            # 单文件的大小，默认10M, 超过之后打包成一个日志文件
            max-file-size: 1MB
            # 日志保存的天数
            max-history: 30
            # 打包文件格式,默认： ${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz,书写格式为：文件路径/文件名.%i.文件后缀,其中%i不可省去，否则无日志显示
            # 例如： 日期为：2021/11/5 ,则打包文件之后为： log/ota.2021-11-05.0.gz,0表示日志的第一部分，后续就是，1,2,3...
            # 如果是压缩包，里面会多一个名log/ota.2021-11-05.0的日志文件
            # 如下面的例子，打包之后为: log/2021-11/ota.2020-11-5.0.log，这是一个日志文件
            file-name-pattern: log/%d{yyyy-MM}/ota.%d{yyyy-MM-dd}.%i.log
